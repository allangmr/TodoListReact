{"version":3,"sources":["components/TodoAdd.js","hooks/useForm.js","components/TodoFooter.js","components/TodoListItem.js","components/TodoList.js","components/todoReducer.js","components/TodoApp.js","index.js"],"names":["TodoAdd","handleAddTodo","initialState","useState","values","setValues","target","name","value","useForm","description","handleInputChange","reset","onSubmit","e","preventDefault","trim","length","newTodo","id","Date","getTime","desc","done","className","type","placeholder","autoComplete","onChange","TodoFooter","todosPending","handleDeleteAll","onClick","TodoListItem","todo","handleDelete","handleToggle","index","TodoList","todos","map","i","todoReducer","state","action","payload","filter","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","dispatch","useEffect","setItem","stringify","todoId","removeItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAEaA,EAAU,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACrB,ECDmB,WAAwB,IAAvBC,EAAsB,uDAAP,GACnC,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAQA,MAAO,CAACD,EAJkB,SAAC,GAAc,IAAbE,EAAY,EAAZA,OACxBD,EAAU,2BAAID,GAAL,kBAAaE,EAAOC,KAAQD,EAAOE,UAJlC,WACVH,EAAUH,KDFoCO,CAAQ,CACtDC,YAAY,KADhB,mBAAQA,EAAR,KAAQA,YAAcC,EAAtB,KAAyCC,EAAzC,KAkBA,OACI,mCACI,sBAAMC,SAhBO,SAACC,GAElB,GADAA,EAAEC,mBACCL,EAAYM,OAAOC,QAAS,GAA/B,CAGA,IAAMC,EAAU,CACZC,IAAI,IAAIC,MAAOC,UACfC,KAAMZ,EACNa,MAAM,GAEVtB,EAAciB,GACdN,MAKI,SACI,sBAAKY,UAAU,aAAf,UACI,uBACIC,KAAK,OACLlB,KAAK,cACLmB,YAAY,uBACZC,aAAa,MACbnB,MAAOE,EACPkB,SAAUjB,IAEV,wBAAQc,KAAK,SAASD,UAAU,SAAhC,SACI,mBAAGA,UAAU,0BEhC5BK,G,MAAa,SAAC,GAAqC,IAApCC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,gBACtC,OACI,sBAAKP,UAAU,SAAf,UACI,0CAAY,sBAAMA,UAAU,eAAhB,SAAgCM,IAA5C,oBACA,wBAAQN,UAAS,UAAOM,GAAc,GAAK,UAAaE,QAASD,EAAjE,4BCNCE,EAAe,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,KAAoBC,GAA4B,EAA1CC,aAA0C,EAA5BD,cAA4B,EAAdE,MAC5D,OACI,+BAGKH,EAAKZ,KAAK,sBAAME,UAAU,OAAOQ,QAAS,kBAAMG,EAAaD,EAAKf,KAAxD,SAA6D,mBAAGK,UAAU,qBAFhFU,EAAKf,KCDTmB,EAAW,SAAC,GAAyC,IAAxCC,EAAuC,EAAvCA,MAAOH,EAAgC,EAAhCA,aAAcD,EAAkB,EAAlBA,aAC3C,OAEQ,oBAAIX,UAAU,WAAd,SAEgBe,EAAMC,KAAI,SAACN,EAAMO,GAAP,OACF,cAAC,EAAD,CAAcP,KAAMA,EAAoBG,MAAOI,EAAGL,aAAcA,EAAcD,aAAcA,GAA7DD,EAAKf,U,OCR3DuB,EAAc,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC/C,OAAQA,EAAOnB,MACX,IAAK,MACD,MAAM,GAAN,mBAAWkB,GAAX,CAAkBC,EAAOC,UAC7B,IAAK,SACD,OAAOF,EAAMG,QAAO,SAAAZ,GAAI,OAAIA,EAAKf,KAAOyB,EAAOC,WACnD,IAAK,SACD,OAAOF,EAAMH,KAAI,SAAAN,GAAI,OAChBA,EAAKf,KAAOyB,EAAOC,QAApB,YAAC,eACSX,GADV,IACgBX,MAAOW,EAAKX,OACtBW,KAEd,IAAK,YAED,OADAS,EAAQ,GAEZ,IAAK,aACD,OAAOA,EAAMH,KAAI,SAAAN,GACb,OAAGA,EAAKf,KAAOyB,EAAOC,QACX,2BACAX,GADP,IAEIX,MAAOW,EAAKX,OAGTW,KAGnB,QACI,OAAOS,ICnBbI,EAAO,WAET,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,IAG3CC,EAAU,WACnB,MAA0BC,qBAAWX,EAAa,GAAIK,GAAtD,mBAAOR,EAAP,KAAce,EAAd,KAGAC,qBAAU,WACPL,aAAaM,QAAQ,QAASR,KAAKS,UAAUlB,MAC7C,CAACA,IA6BJ,OACI,sBAAKf,UAAU,UAAf,UACI,6CACA,cAAC,EAAD,CAASvB,cA9BK,SAACiB,GACnBoC,EAAS,CACL7B,KAAK,MACLoB,QAAS3B,OA4BT,cAAC,EAAD,CAAUqB,MAAOA,EAAOH,aAXX,SAACsB,GAClBJ,EAAS,CACL7B,KAAK,SACLoB,QAASa,KAQ2CvB,aAzBvC,SAACuB,GAClBJ,EAAS,CACL7B,KAAK,SACLoB,QAASa,OAuBT,cAAC,EAAD,CAAY5B,aAAcS,EAAMtB,OAAQc,gBAnBxB,WACpBuB,EAAS,CACL7B,KAAK,cAETyB,aAAaS,WAAW,gBClChCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.067154d5.chunk.js","sourcesContent":["import { useForm } from '../hooks/useForm';\r\n\r\nexport const TodoAdd = ({handleAddTodo}) => {\r\n    const [{description}, handleInputChange, reset] = useForm({\r\n        description:''\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(description.trim().length <=1){\r\n            return;\r\n        }\r\n        const newTodo = {\r\n            id: new Date().getTime(),\r\n            desc: description,\r\n            done: false\r\n        }\r\n        handleAddTodo(newTodo)\r\n        reset();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"inputField\">\r\n                    <input \r\n                        type=\"text\" \r\n                        name=\"description\"\r\n                        placeholder=\"Add some description\"\r\n                        autoComplete=\"off\"\r\n                        value={description}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                        <button type=\"submit\" className=\"active\">\r\n                            <i className=\"fas fa-plus\"></i>\r\n                        </button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n    const reset = () => {\r\n        setValues(initialState)\r\n    }\r\n    const handleInputChange = ({target}) => {\r\n        setValues({...values,[target.name] : target.value})\r\n    }\r\n\r\n    return [values, handleInputChange, reset]\r\n}","import React from 'react'\r\n\r\nexport const TodoFooter = ({todosPending, handleDeleteAll}) => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>You have <span className=\"pendingTasks\">{todosPending}</span> pending tasks</p>\r\n            <button className={ `${ todosPending>=1 && 'active'}` } onClick={handleDeleteAll}>Clear All</button>\r\n        </div>\r\n    )\r\n}\r\n","export const TodoListItem = ({todo, handleToggle, handleDelete, index: i}) => {\r\n    return (\r\n        <li \r\n            key={todo.id} \r\n        >\r\n            {todo.desc}<span className=\"icon\" onClick={() => handleDelete(todo.id)}><i className=\"fas fa-trash\"></i></span>\r\n            \r\n        </li>\r\n    )\r\n}\r\n","import { TodoListItem } from \"./TodoListItem\"\r\n\r\nexport const TodoList = ({todos, handleToggle, handleDelete}) => {\r\n    return (\r\n\r\n            <ul className=\"todoList\">\r\n                        {\r\n                            todos.map((todo, i)=> (\r\n                                    <TodoListItem todo={todo} key={todo.id} index={i} handleToggle={handleToggle} handleDelete={handleDelete}/>\r\n                                )\r\n                            ) \r\n                        }\r\n            </ul>\r\n    )\r\n}\r\n","export const todoReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'add': \r\n            return [...state, action.payload];\r\n        case 'delete': \r\n            return state.filter(todo => todo.id !== action.payload)\r\n        case 'toggle': \r\n            return state.map(todo =>\r\n                (todo.id === action.payload)   \r\n                    ? {...todo, done: !todo.done}\r\n                    : todo\r\n            )\r\n        case 'deleteAll':\r\n            state = [];\r\n            return state;\r\n        case 'toggle-old':\r\n            return state.map(todo =>{\r\n                if(todo.id === action.payload){\r\n                    return {\r\n                        ...todo, \r\n                        done: !todo.done\r\n                    }\r\n                }else{\r\n                    return todo;\r\n                }\r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { useEffect, useReducer } from 'react'\r\nimport { TodoAdd } from './TodoAdd'\r\nimport './TodoApp.css'\r\nimport { TodoFooter } from './TodoFooter'\r\nimport { TodoList } from './TodoList'\r\nimport { todoReducer } from './todoReducer'\r\n\r\n\r\nconst init = () => {\r\n\r\n    return JSON.parse(localStorage.getItem('todos')) || [];\r\n}\r\n\r\nexport const TodoApp = () => {\r\n    const [todos, dispatch] = useReducer(todoReducer, [], init)\r\n\r\n\r\n    useEffect(() => {\r\n       localStorage.setItem('todos', JSON.stringify(todos));\r\n    }, [todos])\r\n\r\n    const handleAddTodo = (newTodo) => {\r\n        dispatch({\r\n            type:'add',\r\n            payload: newTodo\r\n        })\r\n    }\r\n    const handleDelete = (todoId) => {\r\n        dispatch({\r\n            type:'delete',\r\n            payload: todoId\r\n        })\r\n    }\r\n\r\n    const handleDeleteAll = () => {\r\n        dispatch({\r\n            type:'deleteAll'\r\n        })\r\n        localStorage.removeItem('todos');\r\n    }\r\n\r\n    const handleToggle = (todoId) => {\r\n        dispatch({\r\n            type:'toggle',\r\n            payload: todoId\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <header>TodoApp</header>\r\n            <TodoAdd handleAddTodo={handleAddTodo} />\r\n            <TodoList todos={todos} handleToggle={handleToggle} handleDelete={handleDelete} />\r\n            <TodoFooter todosPending={todos.length} handleDeleteAll={handleDeleteAll}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {TodoApp} from './components/TodoApp'\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}